# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\ליאב\PycharmProjects\YudbetCyberProject\UI\Register.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
from Login import *
import socket
import hashlib

class Ui_RegisterWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 775)
        MainWindow.setMaximumSize(QtCore.QSize(500, 775))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(90, 110, 321, 101))
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(32)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("QLabel{\n"
"\n"
"color: rgb(255, 140, 0);\n"
"}")
        self.label.setObjectName("label")
        self.Username = QtWidgets.QLineEdit(self.centralwidget)
        self.Username.setGeometry(QtCore.QRect(130, 200, 240, 40))
        palette = QtGui.QPalette()
        self.Username.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Guttman Yad-Brush")
        font.setPointSize(12)
        self.Username.setFont(font)
        self.Username.setStyleSheet("QLineEdit{\n"
"    border: 3px solid rgb(33,36,45);\n"
"    border-radius: 20px;\n"
"    color: #ffffff;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    background-color:rgb(38,44,51);\n"
"}\n"
"QLineEdit:hover{\n"
"    border: 2px solid rgb(255, 255, 127)\n"
"}\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(0, 255, 255)\n"
"}\n"
"")
        self.Username.setText("")
        self.Username.setObjectName("Username")
        self.Password = QtWidgets.QLineEdit(self.centralwidget)
        self.Password.setGeometry(QtCore.QRect(130, 270, 240, 40))

        self.Password.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Guttman Yad-Brush")
        font.setPointSize(12)
        self.Password.setFont(font)
        self.Password.setStyleSheet("QLineEdit{\n"
"    border: 3px solid rgb(33,36,45);\n"
"    border-radius: 20px;\n"
"    color: #ffffff;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    background-color:rgb(38,44,51);\n"
"}\n"
"QLineEdit:hover{\n"
"    border: 2px solid rgb(255, 255, 127)\n"
"}\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(0, 255, 255)\n"
"}\n"
"")
        self.Password.setText("")
        self.Password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.Password.setObjectName("Password")

        self.CPassword = QtWidgets.QLineEdit(self.centralwidget)
        self.CPassword.setGeometry(QtCore.QRect(130, 340, 240, 40))

        self.CPassword.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Guttman Yad-Brush")
        font.setPointSize(12)
        self.CPassword.setFont(font)
        self.CPassword.setStyleSheet("QLineEdit{\n"
                                    "    border: 3px solid rgb(33,36,45);\n"
                                    "    border-radius: 20px;\n"
                                    "    color: #ffffff;\n"
                                    "    padding-left: 20px;\n"
                                    "    padding-right: 20px;\n"
                                    "    background-color:rgb(38,44,51);\n"
                                    "}\n"
                                    "QLineEdit:hover{\n"
                                    "    border: 2px solid rgb(255, 255, 127)\n"
                                    "}\n"
                                    "QLineEdit:focus{\n"
                                    "    border: 2px solid rgb(0, 255, 255)\n"
                                    "}\n"
                                    "")
        self.CPassword.setText("")
        self.CPassword.setEchoMode(QtWidgets.QLineEdit.Password)
        self.CPassword.setObjectName("Password")

        self.Register = QtWidgets.QPushButton(self.centralwidget)
        self.Register.setGeometry(QtCore.QRect(140, 560, 221, 111))

        self.Register.setPalette(palette)
        self.Register.setAutoFillBackground(False)
        self.Register.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.Register.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Register.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Register.setIcon(icon)
        self.Register.setIconSize(QtCore.QSize(200, 100))
        self.Register.setObjectName("Register")
        self.Register.clicked.connect(self.RegisterBtn)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setEnabled(True)
        self.label_2.setGeometry(QtCore.QRect(0, -40, 500, 821))
        font = QtGui.QFont()
        font.setFamily("Gill Sans Ultra Bold")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setTabletTracking(False)
        self.label_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("home.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.ErrorMsg = QtWidgets.QLabel(self.centralwidget)
        self.ErrorMsg.setGeometry(QtCore.QRect(80, 385, 331, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(12)
        font.setBold(True)
        self.ErrorMsg.setFont(font)
        self.ErrorMsg.setText("")
        self.ErrorMsg.setObjectName("ErrorMsg")
        self.ErrorMsg.setStyleSheet("QLabel{\n"
                                 "\n"
                                 "color: rgb(255, 140, 0);\n"
                                 "}")

        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)

        self.label_2.raise_()
        self.label.raise_()
        self.Username.raise_()
        self.Password.raise_()
        self.CPassword.raise_()
        self.Register.raise_()
        self.ErrorMsg.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 500, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def RegisterBtn(self):
        try:
            answer = self.verify()
            if answer == "ok":
                HOST = '127.0.0.1'  # The server's hostname or IP address
                PORT = 65432  # The port used by the server

                with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                    s.connect((HOST, PORT))
                    context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)
                    conn = context.wrap_socket(s,server_hostname=HOST)
                    HashedPass = hashlib.md5(self.Password.text().encode()).hexdigest()
                    info = "register:"+self.Username.text()+":"+HashedPass
                    conn.write(info.encode())
                    data = conn.recv(1024).decode()
                if data == "Registered Successfully":
                    self.ErrorMsg.setText("Registered Successfully,\n you can close this window now.")

                else:
                    self.ErrorMsg.setText(data)

            else:
                self.ErrorMsg.setText(answer)
        except Exception as exe:
            print(exe)
            self.ErrorMsg.setText("ERROR: Main Server is down.")

    def verify(self):
        special_characters = '!@#$%^&*()-+?_=,<>/:"'

        if any(c in special_characters for c in self.Username.text()):
            return "Username cannot contain special characters"

        if self.Username.text().startswith("'") or self.Password.text().startswith("'"):
            return "Sql injections are not welcomed!"

        if len(self.Username.text()) > 16:
            return "Username must be shorter than 16 characters"

        if len(self.Username.text()) < 6:
            return "Username must be at least 6 characters"

        if self.CPassword.text() != self.Password.text():
            return "Passwords does not match!"

        if len(self.Password.text()) < 6:
            return "Password must be at least 6 characters"

        if self.Username.text().startswith("'") or self.Password.text().startswith("'"):
            return "Sql injections are not welcomed!"

        if self.Password.text().startswith(":"):
            return "Password cannot start with :"

        return "ok"


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "New Account"))
        self.Username.setPlaceholderText(_translate("MainWindow", "Username"))
        self.Password.setPlaceholderText(_translate("MainWindow", "Password"))
        self.CPassword.setPlaceholderText(_translate("MainWindow", "Confirm Password"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_RegisterWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
