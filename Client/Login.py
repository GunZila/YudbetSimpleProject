# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\ליאב\PycharmProjects\YudbetCyberProject\UI\Login.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Register import *
from AsUsual import Ui_MainWindow
import ssl
import hashlib


class Ui_LoginWindow(object):


    def setupUi(self, MainWindow):
        self.HOST = '127.0.0.1'  # The server's hostname or IP address
        self.PORT = 65432  # The port used by the server
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 775)
        MainWindow.setMinimumSize(QtCore.QSize(500, 775))
        MainWindow.setMaximumSize(QtCore.QSize(500, 775))
        palette = QtGui.QPalette()
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Connect = QtWidgets.QPushButton(self.centralwidget)
        self.Connect.setGeometry(QtCore.QRect(140, 560, 221, 111))
        self.Connect.setPalette(palette)
        self.Connect.setAutoFillBackground(False)
        self.Connect.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.Connect.setText("")
        self.Connect.clicked.connect(self.Login)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("connect.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Connect.setIcon(icon)
        self.Connect.setIconSize(QtCore.QSize(200, 100))
        self.Connect.setObjectName("Connect")
        self.ErrorMsg = QtWidgets.QLabel(self.centralwidget)
        self.ErrorMsg.setGeometry(QtCore.QRect(80, 360, 331, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(12)
        font.setBold(True)
        self.ErrorMsg.setFont(font)
        self.ErrorMsg.setText("")
        self.ErrorMsg.setObjectName("ErrorMsg")
        self.ErrorMsg.setStyleSheet("QLabel{\n"
                                    "\n"
                                    "color: rgb(255, 140, 0);\n"
                                    "}")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setEnabled(True)
        self.label_2.setGeometry(QtCore.QRect(0, -30, 500, 821))
        font = QtGui.QFont()
        font.setFamily("Gill Sans Ultra Bold")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setTabletTracking(False)
        self.label_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("home.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.Password = QtWidgets.QLineEdit(self.centralwidget)
        self.Password.setGeometry(QtCore.QRect(130, 270, 240, 40))

        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.Password.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Guttman Yad-Brush")
        font.setPointSize(12)
        self.Password.setFont(font)
        self.Password.setStyleSheet("QLineEdit{\n"
"    border: 3px solid rgb(33,36,45);\n"
"    border-radius: 20px;\n"
"    color: #ffffff;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    background-color:rgb(38,44,51);\n"
"}\n"
"QLineEdit:hover{\n"
"    border: 2px solid rgb(255, 255, 127)\n"
"}\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(0, 255, 255)\n"
"}\n"
"")
        self.Password.setText("")
        self.Password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.Password.setObjectName("Password")
        self.Username = QtWidgets.QLineEdit(self.centralwidget)
        self.Username.setGeometry(QtCore.QRect(130, 200, 240, 40))
        self.Username.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Guttman Yad-Brush")
        font.setPointSize(12)
        self.Username.setFont(font)
        self.Username.setStyleSheet("QLineEdit{\n"
"    border: 3px solid rgb(33,36,45);\n"
"    border-radius: 20px;\n"
"    color: #ffffff;\n"
"    padding-left: 20px;\n"
"    padding-right: 20px;\n"
"    background-color:rgb(38,44,51);\n"
"}\n"
"QLineEdit:hover{\n"
"    border: 2px solid rgb(255, 255, 127)\n"
"}\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(0, 255, 255)\n"
"}\n"
"")

        self.ServerIp = QtWidgets.QLineEdit(self.centralwidget)
        self.ServerIp.setGeometry(QtCore.QRect(130, 340, 240, 40))
        self.ServerIp.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Guttman Yad-Brush")
        font.setPointSize(12)
        self.ServerIp.setFont(font)
        self.ServerIp.setStyleSheet("QLineEdit{\n"
                                    "    border: 3px solid rgb(33,36,45);\n"
                                    "    border-radius: 20px;\n"
                                    "    color: #ffffff;\n"
                                    "    padding-left: 20px;\n"
                                    "    padding-right: 20px;\n"
                                    "    background-color:rgb(38,44,51);\n"
                                    "}\n"
                                    "QLineEdit:hover{\n"
                                    "    border: 2px solid rgb(255, 255, 127)\n"
                                    "}\n"
                                    "QLineEdit:focus{\n"
                                    "    border: 2px solid rgb(0, 255, 255)\n"
                                    "}\n"
                                    "")
        self.ServerIp.setText("")
        self.ServerIp.setObjectName("ServerIp")






        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 120, 131, 91))
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(32)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("QLabel{\n"
"\n"
"color: rgb(255, 140, 0);\n"
"}")
        self.label.setObjectName("label")
        self.CreateAcc = QtWidgets.QPushButton(self.centralwidget)
        self.CreateAcc.setGeometry(QtCore.QRect(0, 0, 181, 41))

        self.CreateAcc.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.CreateAcc.setFont(font)
        self.CreateAcc.setAutoFillBackground(False)
        self.CreateAcc.setStyleSheet("QPushButton{\n"
"\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);\n"
"\n"
"\n"
"}\n"
"")
        self.CreateAcc.setIconSize(QtCore.QSize(200, 100))
        self.CreateAcc.setObjectName("CreateAcc")
        self.CreateAcc.clicked.connect(self.showRegScreen)
        self.label_2.raise_()
        self.Connect.raise_()
        self.ErrorMsg.raise_()
        self.Password.raise_()
        self.Username.raise_()
        self.label.raise_()
        self.CreateAcc.raise_()
        self.ServerIp.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 500, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def showRegScreen(self):
        self.window1 = QtWidgets.QMainWindow()
        self.ui1 = Ui_RegisterWindow()
        self.ui1.setupUi(self.window1)
        self.window1.show()

    def Login(self):

        try:
            answer = self.verify()

            if answer == "ok":


                with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                    s.connect((self.HOST, self.PORT))
                    context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)
                    conn = context.wrap_socket(s,server_hostname=self.HOST)
                    HashedPass = hashlib.md5(self.Password.text().encode()).hexdigest()
                    info = "login:" + self.Username.text() + ":" + HashedPass
                    conn.write(info.encode())
                    data = conn.recv(1024).decode()
                    self.ErrorMsg.setText(data)
                    if data == "Successful Login":
                        self.openMainWindow()


            else:
                self.ErrorMsg.setText(answer)
        except Exception as exe:

            self.ErrorMsg.setText("ERROR: Main Server is down.")

    def openMainWindow(self):
        MainWindow.hide()
        self.ui2 = Ui_MainWindow(self.ServerIp.text(),self.Username.text())

    def verify(self):
        special_characters = '!@#$%^&*()-+?_=,<>/:;"'

        if any(c in special_characters for c in self.Username.text()):
            return "Username cannot contain special characters"

        if self.Username.text().startswith("'") or self.Password.text().startswith("'"):
            return "Sql injections are not welcomed!"

        if len(self.Username.text()) > 16:
            return "Username must be shorter than 16 characters"

        if len(self.Username.text()) < 6:
            return "Username must be at least 6 characters"

        if len(self.Password.text()) < 6:
            return "Password must be at least 6 characters"

        if self.Username.text().startswith("'") or self.Password.text().startswith("'"):
            return "Sql injections are not welcomed!"

        if self.Password.text().startswith(":"):
            return "Password cannot start with :"
        try:
            socket.inet_aton(self.ServerIp.text())
        except socket.error:
            return "Ip is not valid."

        return "ok"

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Login"))
        self.Password.setPlaceholderText(_translate("MainWindow", "Password"))
        self.Username.setPlaceholderText(_translate("MainWindow", "Username"))
        self.ServerIp.setPlaceholderText(_translate("MainWindow", "Server's IP"))
        self.label.setText(_translate("MainWindow", "Login"))
        self.CreateAcc.setText(_translate("MainWindow", "Create an account"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_LoginWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
